{
	"rating": {
		"max": 10,
		"numRaters": 355,
		"average": "7.2",
		"min": 0
	},
	"subtitle": "",
	"author": [
		"许式伟"
	],
	"pubdate": "2012-8",
	"tags": [
		{
			"count": 279,
			"name": "go语言",
			"title": "go语言"
		},
		{
			"count": 235,
			"name": "Go",
			"title": "Go"
		},
		{
			"count": 166,
			"name": "编程",
			"title": "编程"
		},
		{
			"count": 96,
			"name": "程序设计",
			"title": "程序设计"
		},
		{
			"count": 90,
			"name": "编程语言",
			"title": "编程语言"
		},
		{
			"count": 82,
			"name": "计算机",
			"title": "计算机"
		},
		{
			"count": 79,
			"name": "golang",
			"title": "golang"
		},
		{
			"count": 69,
			"name": "programming",
			"title": "programming"
		}
	],
	"origin_title": "",
	"image": "https:\/\/img3.doubanio.com\/mpic\/s11162016.jpg",
	"binding": "平装",
	"translator": [],
	"catalog": "序 为什么我们需要一门新的语言？\n第1章 初识Go语言\n1.1 Go语言简史\n1.2 语言特性\n1.3 “Hello, world!”\n1.4 编译环境\n1.5 开发工具\n1.6 工程管理\n1.7 问题追踪和调试\n1.8 如何寻求帮助\n本章小结\n第2章 顺序编程\n2.1 变量、常量和类型\n2.1.1 变量\n2.1.2 常量\n2.1.3 类型\n2.2 流程控制\n2.2.1 条件语句\n2.2.2 选择语句\n2.2.3 循环\n2.2.4 跳转语句\n2.3 函数\n2.3.1 函数调用\n2.3.2 不定参数\n2.3.3 多返回值\n2.3.4 匿名函数与闭包\n2.4 错误处理\n2.4.1 error接口\n2.4.2 defer\n2.4.3 panic和recover\n本章小结\n第3章 面向对象编程\n3.1 类型系统\n3.1.1 给类型添加方法\n3.1.2 值语义和引用语义\n3.2 结构体\n3.2.1 初始化\n3.2.2 匿名组合\n3.2.3 成员可访问性\n3.3 接口\n3.3.1 其他语言中的接口\n3.3.2 非侵入式接口\n3.3.3 接口赋值\n3.3.4 接口查询\n3.3.5 类型查询\n3.3.6 Any类型\n本章小结\n第4章 工程管理\n4.1 Go命令行工具\n4.2 代码风格\n4.3 工程组织\n4.4 单元测试\n4.5 文档管理\n4.6 工程构建\n4.7 包的管理与分发\n4.8 跨平台开发\n4.8.1 Go语言的跨平台能力\n4.8.2 交叉编译\n4.8.3 Android支持\n本章小结\n第5章 并发编程\n5.1 初识Goroutine\n5.1.1 基本用法\n5.1.2 Goroutine通信\n5.2 Channel\n5.2.1 基本用法\n5.2.2 关闭\n5.2.3 变量的传递\n5.2.4 单向Channel\n5.2.5 超时处理\n5.3 多核并行化\n5.4 同步机制\n5.4.1 sync包简介\n5.4.2 同步锁\n5.4.3 Once类型\n本章小结\n第6章 网络编程\n6.1 HTTP编程\n6.1.1 客户端编程\n6.1.2 开发HTTP服务器\n6.2 JSON\n6.2.1 JSON简介\n6.2.2 编码\n6.2.3 解码\n6.2.4 未知类型的解码\n6.2.5 流式读写\n6.3 网站开发\n6.3.1 一个最简单的网站\n6.3.2 开发一个相册网站\n6.3.2.1 新建工程\n6.3.2.2 实现网络服务\n6.3.2.3 网页模板渲染\n6.3.2.4 缓存\n6.3.2.5 错误处理\n6.3.2.6 防止程序崩溃\n6.3.2.7 资源分离\n6.3.2.8 重构\n6.4 更多资源\n本章小结\n第7章 进阶话题\n7.1 Go语言中的内存管理\n7.2 反射\n7.3 语言交互性CGO\n7.4 链接符号\n7.5 Goroutine实现机制\n7.6 接口的奥秘\n本章小结\n第8章 开发工具\n8.1 Go语言开发工具\n8.2 gEdit\n8.3 Goclipse - 使用Eclipse开发和调试Go程序\n8.4 VIM\n8.5 Nodepad++，Windows上的Go开发环境搭建\n8.6 GolangIDE\n本章小结\n附录 Go语言包参考",
	"pages": "300",
	"images": {
		"small": "https:\/\/img3.doubanio.com\/spic\/s11162016.jpg",
		"large": "https:\/\/img3.doubanio.com\/lpic\/s11162016.jpg",
		"medium": "https:\/\/img3.doubanio.com\/mpic\/s11162016.jpg"
	},
	"alt": "http:\/\/book.douban.com\/subject\/11577300\/",
	"id": "11577300",
	"publisher": "人民邮电出版社",
	"isbn10": "7115290369",
	"isbn13": "9787115290366",
	"title": "Go语言编程",
	"url": "http:\/\/api.douban.com\/v2\/book\/11577300",
	"alt_title": "",
	"author_intro": "许式伟\n七牛云存储CEO，曾任盛大创新院资深研究员、金山软件技术总监、WPS Office 2005首席架构师。开源爱好者，发布过包括WINX、TPL等十余个C++开源项目，拥有超过15年的C\/C++开发经验。在接触Go语言后即可被其大道至简、少即是多的设计哲学所倾倒。七牛云存储是国内第一个吃螃蟹的团队，核心服务完全采用Go语言实现。\n吕桂华\n七牛云存储联合创始人，曾在金山软件、盛大游戏等公司担任架构师和部门经理等职务，在企业级系统和大型网游平台领域有较多涉猎。拥有十余年的C\/C++大型项目开发经验，也曾在Java和.NET平台上探索多年。同样被Go语言的魅力所吸引而不可自拔，希望能为推广这门优秀的语言尽自己的绵薄之力。",
	"summary": "这本书从整体的写作风格来说，会以介绍 Go 语言特性为主，示例则尽量采用作者平常的实践，而不是一个没有太大实际意义的语法示范样例。\n本书作者背景极强，许式伟为原金山WPS首席架构师、曾是盛大创新院研究员，目前是国内Go语言实践圈子公认的Go语言专家。参与本书写作的几位作者都是实际用Go语言开发的项目的开发人员，有较强的实战经验。\n本书以介绍Go语言特性为主，示例则尽量采用作者开发团队平常的实践，内容涉及内存管理（堆和栈）、错误处理、OOP、并发编程等关键话题。 这本书面向的读者是所有打算用Go语言的开发者，主要包括目前使用C、C++、Java、C#的开发人员，甚至一些Python、PHP开发人员也可能转为 Go 程序员。",
	"series": {
		"id": "13000",
		"title": "图灵原创"
	},
	"price": "49.00元"
}